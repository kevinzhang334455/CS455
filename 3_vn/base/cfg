#!/usr/bin/ruby

$Passes = $Passes || Array.new

build_cfg = Proc.new do |prog|
cfg_array = Array.new
  # only one module in a program
  prog.each { |func|
    # skip function declaration
    next if not func.is_a?Ast::Block

    cfg = Ast::Cfg.new()
    cfg.find_leader(func)
    cfg.find_last(func)
    cfg.build_edge(func)
    cfg.cal_reaching_def()
    cfg.copy_local_to_global()
#    cfg.print_global_use
    cfg.cal_DDE
    cfg.eliminate_code
      cfg.bb_array.each do |b|
#        b.print_info
#        b.lvn
#         b.print_reaches
      end
  }
end

$Passes.unshift ["Build Control Flow Graph", build_cfg]

load 'urcc'
